//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TESTAPP10.Droid.WTDriverTrak_WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WTDriverTrakSoap", Namespace="http://tempuri.org/")]
    public partial class WTDriverTrak : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateDCargoNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDCargoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AttachFileToShipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeShipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadSendProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadimgsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipmentActionUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback SBoardDataDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MBoardDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback MBoardDataDetailsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WTDriverTrak() {
            this.Url = "http://204.93.158.163/CustomerSolution/WTDriverTrak.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateDCargoNotesCompletedEventHandler UpdateDCargoNotesCompleted;
        
        /// <remarks/>
        public event UpdateDCargoCompletedEventHandler UpdateDCargoCompleted;
        
        /// <remarks/>
        public event AttachFileToShipmentCompletedEventHandler AttachFileToShipmentCompleted;
        
        /// <remarks/>
        public event ChangeShipmentCompletedEventHandler ChangeShipmentCompleted;
        
        /// <remarks/>
        public event SendProgressCompletedEventHandler SendProgressCompleted;
        
        /// <remarks/>
        public event ReadSendProgressCompletedEventHandler ReadSendProgressCompleted;
        
        /// <remarks/>
        public event LoadDetailsCompletedEventHandler LoadDetailsCompleted;
        
        /// <remarks/>
        public event UploadimgsCompletedEventHandler UploadimgsCompleted;
        
        /// <remarks/>
        public event ShipmentActionUpdateCompletedEventHandler ShipmentActionUpdateCompleted;
        
        /// <remarks/>
        public event PostSignatureCompletedEventHandler PostSignatureCompleted;
        
        /// <remarks/>
        public event SBoardDataDetailsCompletedEventHandler SBoardDataDetailsCompleted;
        
        /// <remarks/>
        public event MBoardDataCompletedEventHandler MBoardDataCompleted;
        
        /// <remarks/>
        public event MBoardDataDetailsCompletedEventHandler MBoardDataDetailsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDCargoNotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDCargoNotes(string RefNO, string HAWB, string notes, string UserID, string CompanyID, string InviteCode) {
            object[] results = this.Invoke("UpdateDCargoNotes", new object[] {
                        RefNO,
                        HAWB,
                        notes,
                        UserID,
                        CompanyID,
                        InviteCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDCargoNotesAsync(string RefNO, string HAWB, string notes, string UserID, string CompanyID, string InviteCode) {
            this.UpdateDCargoNotesAsync(RefNO, HAWB, notes, UserID, CompanyID, InviteCode, null);
        }
        
        /// <remarks/>
        public void UpdateDCargoNotesAsync(string RefNO, string HAWB, string notes, string UserID, string CompanyID, string InviteCode, object userState) {
            if ((this.UpdateDCargoNotesOperationCompleted == null)) {
                this.UpdateDCargoNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDCargoNotesOperationCompleted);
            }
            this.InvokeAsync("UpdateDCargoNotes", new object[] {
                        RefNO,
                        HAWB,
                        notes,
                        UserID,
                        CompanyID,
                        InviteCode}, this.UpdateDCargoNotesOperationCompleted, userState);
        }
        
        private void OnUpdateDCargoNotesOperationCompleted(object arg) {
            if ((this.UpdateDCargoNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDCargoNotesCompleted(this, new UpdateDCargoNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDCargo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDCargo(string RefNO, string HAWB, string DamageCargo, string UserID, string CompanyID, string InviteCode) {
            object[] results = this.Invoke("UpdateDCargo", new object[] {
                        RefNO,
                        HAWB,
                        DamageCargo,
                        UserID,
                        CompanyID,
                        InviteCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDCargoAsync(string RefNO, string HAWB, string DamageCargo, string UserID, string CompanyID, string InviteCode) {
            this.UpdateDCargoAsync(RefNO, HAWB, DamageCargo, UserID, CompanyID, InviteCode, null);
        }
        
        /// <remarks/>
        public void UpdateDCargoAsync(string RefNO, string HAWB, string DamageCargo, string UserID, string CompanyID, string InviteCode, object userState) {
            if ((this.UpdateDCargoOperationCompleted == null)) {
                this.UpdateDCargoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDCargoOperationCompleted);
            }
            this.InvokeAsync("UpdateDCargo", new object[] {
                        RefNO,
                        HAWB,
                        DamageCargo,
                        UserID,
                        CompanyID,
                        InviteCode}, this.UpdateDCargoOperationCompleted, userState);
        }
        
        private void OnUpdateDCargoOperationCompleted(object arg) {
            if ((this.UpdateDCargoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDCargoCompleted(this, new UpdateDCargoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AttachFileToShipment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AttachFileToShipmentResponseType AttachFileToShipment(int Housebill, string Filename, string FileDataBase64, string DocType) {
            object[] results = this.Invoke("AttachFileToShipment", new object[] {
                        Housebill,
                        Filename,
                        FileDataBase64,
                        DocType});
            return ((AttachFileToShipmentResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void AttachFileToShipmentAsync(int Housebill, string Filename, string FileDataBase64, string DocType) {
            this.AttachFileToShipmentAsync(Housebill, Filename, FileDataBase64, DocType, null);
        }
        
        /// <remarks/>
        public void AttachFileToShipmentAsync(int Housebill, string Filename, string FileDataBase64, string DocType, object userState) {
            if ((this.AttachFileToShipmentOperationCompleted == null)) {
                this.AttachFileToShipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttachFileToShipmentOperationCompleted);
            }
            this.InvokeAsync("AttachFileToShipment", new object[] {
                        Housebill,
                        Filename,
                        FileDataBase64,
                        DocType}, this.AttachFileToShipmentOperationCompleted, userState);
        }
        
        private void OnAttachFileToShipmentOperationCompleted(object arg) {
            if ((this.AttachFileToShipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttachFileToShipmentCompleted(this, new AttachFileToShipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeShipment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangeShipment(string OldRefNo, string NewRefNo, string UserId, string CompanyId, string Status, string OldRefNoStatus, string DDate, string InviteCode) {
            object[] results = this.Invoke("ChangeShipment", new object[] {
                        OldRefNo,
                        NewRefNo,
                        UserId,
                        CompanyId,
                        Status,
                        OldRefNoStatus,
                        DDate,
                        InviteCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeShipmentAsync(string OldRefNo, string NewRefNo, string UserId, string CompanyId, string Status, string OldRefNoStatus, string DDate, string InviteCode) {
            this.ChangeShipmentAsync(OldRefNo, NewRefNo, UserId, CompanyId, Status, OldRefNoStatus, DDate, InviteCode, null);
        }
        
        /// <remarks/>
        public void ChangeShipmentAsync(string OldRefNo, string NewRefNo, string UserId, string CompanyId, string Status, string OldRefNoStatus, string DDate, string InviteCode, object userState) {
            if ((this.ChangeShipmentOperationCompleted == null)) {
                this.ChangeShipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeShipmentOperationCompleted);
            }
            this.InvokeAsync("ChangeShipment", new object[] {
                        OldRefNo,
                        NewRefNo,
                        UserId,
                        CompanyId,
                        Status,
                        OldRefNoStatus,
                        DDate,
                        InviteCode}, this.ChangeShipmentOperationCompleted, userState);
        }
        
        private void OnChangeShipmentOperationCompleted(object arg) {
            if ((this.ChangeShipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeShipmentCompleted(this, new ChangeShipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendProgress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendProgress(string RefNo, string HAWB, string LAT, string LON, string UserId, string companyID, string InviteCode, string Status, string TrackDateTime) {
            object[] results = this.Invoke("SendProgress", new object[] {
                        RefNo,
                        HAWB,
                        LAT,
                        LON,
                        UserId,
                        companyID,
                        InviteCode,
                        Status,
                        TrackDateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendProgressAsync(string RefNo, string HAWB, string LAT, string LON, string UserId, string companyID, string InviteCode, string Status, string TrackDateTime) {
            this.SendProgressAsync(RefNo, HAWB, LAT, LON, UserId, companyID, InviteCode, Status, TrackDateTime, null);
        }
        
        /// <remarks/>
        public void SendProgressAsync(string RefNo, string HAWB, string LAT, string LON, string UserId, string companyID, string InviteCode, string Status, string TrackDateTime, object userState) {
            if ((this.SendProgressOperationCompleted == null)) {
                this.SendProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendProgressOperationCompleted);
            }
            this.InvokeAsync("SendProgress", new object[] {
                        RefNo,
                        HAWB,
                        LAT,
                        LON,
                        UserId,
                        companyID,
                        InviteCode,
                        Status,
                        TrackDateTime}, this.SendProgressOperationCompleted, userState);
        }
        
        private void OnSendProgressOperationCompleted(object arg) {
            if ((this.SendProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendProgressCompleted(this, new SendProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadSendProgress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadSendProgress(string RefNo) {
            object[] results = this.Invoke("ReadSendProgress", new object[] {
                        RefNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadSendProgressAsync(string RefNo) {
            this.ReadSendProgressAsync(RefNo, null);
        }
        
        /// <remarks/>
        public void ReadSendProgressAsync(string RefNo, object userState) {
            if ((this.ReadSendProgressOperationCompleted == null)) {
                this.ReadSendProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadSendProgressOperationCompleted);
            }
            this.InvokeAsync("ReadSendProgress", new object[] {
                        RefNo}, this.ReadSendProgressOperationCompleted, userState);
        }
        
        private void OnReadSendProgressOperationCompleted(object arg) {
            if ((this.ReadSendProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadSendProgressCompleted(this, new ReadSendProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDetails(string HAWB, string UserId, string MType, string InviteCode, string CompanyId) {
            object[] results = this.Invoke("LoadDetails", new object[] {
                        HAWB,
                        UserId,
                        MType,
                        InviteCode,
                        CompanyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDetailsAsync(string HAWB, string UserId, string MType, string InviteCode, string CompanyId) {
            this.LoadDetailsAsync(HAWB, UserId, MType, InviteCode, CompanyId, null);
        }
        
        /// <remarks/>
        public void LoadDetailsAsync(string HAWB, string UserId, string MType, string InviteCode, string CompanyId, object userState) {
            if ((this.LoadDetailsOperationCompleted == null)) {
                this.LoadDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDetailsOperationCompleted);
            }
            this.InvokeAsync("LoadDetails", new object[] {
                        HAWB,
                        UserId,
                        MType,
                        InviteCode,
                        CompanyId}, this.LoadDetailsOperationCompleted, userState);
        }
        
        private void OnLoadDetailsOperationCompleted(object arg) {
            if ((this.LoadDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDetailsCompleted(this, new LoadDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Uploadimgs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Uploadimgs(string RefNo, string HAWB, string FileDataBase64, string UserId, string CompanyID, string InviteCode) {
            object[] results = this.Invoke("Uploadimgs", new object[] {
                        RefNo,
                        HAWB,
                        FileDataBase64,
                        UserId,
                        CompanyID,
                        InviteCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadimgsAsync(string RefNo, string HAWB, string FileDataBase64, string UserId, string CompanyID, string InviteCode) {
            this.UploadimgsAsync(RefNo, HAWB, FileDataBase64, UserId, CompanyID, InviteCode, null);
        }
        
        /// <remarks/>
        public void UploadimgsAsync(string RefNo, string HAWB, string FileDataBase64, string UserId, string CompanyID, string InviteCode, object userState) {
            if ((this.UploadimgsOperationCompleted == null)) {
                this.UploadimgsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadimgsOperationCompleted);
            }
            this.InvokeAsync("Uploadimgs", new object[] {
                        RefNo,
                        HAWB,
                        FileDataBase64,
                        UserId,
                        CompanyID,
                        InviteCode}, this.UploadimgsOperationCompleted, userState);
        }
        
        private void OnUploadimgsOperationCompleted(object arg) {
            if ((this.UploadimgsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadimgsCompleted(this, new UploadimgsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShipmentActionUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShipmentActionUpdate(string refno, string hawb, string status, string MoveType, string userid, string companyid, string invitecode) {
            object[] results = this.Invoke("ShipmentActionUpdate", new object[] {
                        refno,
                        hawb,
                        status,
                        MoveType,
                        userid,
                        companyid,
                        invitecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShipmentActionUpdateAsync(string refno, string hawb, string status, string MoveType, string userid, string companyid, string invitecode) {
            this.ShipmentActionUpdateAsync(refno, hawb, status, MoveType, userid, companyid, invitecode, null);
        }
        
        /// <remarks/>
        public void ShipmentActionUpdateAsync(string refno, string hawb, string status, string MoveType, string userid, string companyid, string invitecode, object userState) {
            if ((this.ShipmentActionUpdateOperationCompleted == null)) {
                this.ShipmentActionUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipmentActionUpdateOperationCompleted);
            }
            this.InvokeAsync("ShipmentActionUpdate", new object[] {
                        refno,
                        hawb,
                        status,
                        MoveType,
                        userid,
                        companyid,
                        invitecode}, this.ShipmentActionUpdateOperationCompleted, userState);
        }
        
        private void OnShipmentActionUpdateOperationCompleted(object arg) {
            if ((this.ShipmentActionUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipmentActionUpdateCompleted(this, new ShipmentActionUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostSignature", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostSignature(string RefNo, string HAWB, string signature, string name, string email, string userid, string companyid, string invitecode) {
            object[] results = this.Invoke("PostSignature", new object[] {
                        RefNo,
                        HAWB,
                        signature,
                        name,
                        email,
                        userid,
                        companyid,
                        invitecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostSignatureAsync(string RefNo, string HAWB, string signature, string name, string email, string userid, string companyid, string invitecode) {
            this.PostSignatureAsync(RefNo, HAWB, signature, name, email, userid, companyid, invitecode, null);
        }
        
        /// <remarks/>
        public void PostSignatureAsync(string RefNo, string HAWB, string signature, string name, string email, string userid, string companyid, string invitecode, object userState) {
            if ((this.PostSignatureOperationCompleted == null)) {
                this.PostSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostSignatureOperationCompleted);
            }
            this.InvokeAsync("PostSignature", new object[] {
                        RefNo,
                        HAWB,
                        signature,
                        name,
                        email,
                        userid,
                        companyid,
                        invitecode}, this.PostSignatureOperationCompleted, userState);
        }
        
        private void OnPostSignatureOperationCompleted(object arg) {
            if ((this.PostSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostSignatureCompleted(this, new PostSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SBoardDataDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SBoardDataDetails(string UserId, string InviteCode, string CompanyId) {
            object[] results = this.Invoke("SBoardDataDetails", new object[] {
                        UserId,
                        InviteCode,
                        CompanyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SBoardDataDetailsAsync(string UserId, string InviteCode, string CompanyId) {
            this.SBoardDataDetailsAsync(UserId, InviteCode, CompanyId, null);
        }
        
        /// <remarks/>
        public void SBoardDataDetailsAsync(string UserId, string InviteCode, string CompanyId, object userState) {
            if ((this.SBoardDataDetailsOperationCompleted == null)) {
                this.SBoardDataDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSBoardDataDetailsOperationCompleted);
            }
            this.InvokeAsync("SBoardDataDetails", new object[] {
                        UserId,
                        InviteCode,
                        CompanyId}, this.SBoardDataDetailsOperationCompleted, userState);
        }
        
        private void OnSBoardDataDetailsOperationCompleted(object arg) {
            if ((this.SBoardDataDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SBoardDataDetailsCompleted(this, new SBoardDataDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MBoardData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MBoardData(string UserId, string InviteCode, string Type, string CompanyId) {
            object[] results = this.Invoke("MBoardData", new object[] {
                        UserId,
                        InviteCode,
                        Type,
                        CompanyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MBoardDataAsync(string UserId, string InviteCode, string Type, string CompanyId) {
            this.MBoardDataAsync(UserId, InviteCode, Type, CompanyId, null);
        }
        
        /// <remarks/>
        public void MBoardDataAsync(string UserId, string InviteCode, string Type, string CompanyId, object userState) {
            if ((this.MBoardDataOperationCompleted == null)) {
                this.MBoardDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMBoardDataOperationCompleted);
            }
            this.InvokeAsync("MBoardData", new object[] {
                        UserId,
                        InviteCode,
                        Type,
                        CompanyId}, this.MBoardDataOperationCompleted, userState);
        }
        
        private void OnMBoardDataOperationCompleted(object arg) {
            if ((this.MBoardDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MBoardDataCompleted(this, new MBoardDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MBoardDataDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MBoardDataDetails(string UserId, string InviteCode, string MNo, string CompanyId) {
            object[] results = this.Invoke("MBoardDataDetails", new object[] {
                        UserId,
                        InviteCode,
                        MNo,
                        CompanyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MBoardDataDetailsAsync(string UserId, string InviteCode, string MNo, string CompanyId) {
            this.MBoardDataDetailsAsync(UserId, InviteCode, MNo, CompanyId, null);
        }
        
        /// <remarks/>
        public void MBoardDataDetailsAsync(string UserId, string InviteCode, string MNo, string CompanyId, object userState) {
            if ((this.MBoardDataDetailsOperationCompleted == null)) {
                this.MBoardDataDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMBoardDataDetailsOperationCompleted);
            }
            this.InvokeAsync("MBoardDataDetails", new object[] {
                        UserId,
                        InviteCode,
                        MNo,
                        CompanyId}, this.MBoardDataDetailsOperationCompleted, userState);
        }
        
        private void OnMBoardDataDetailsOperationCompleted(object arg) {
            if ((this.MBoardDataDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MBoardDataDetailsCompleted(this, new MBoardDataDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AttachFileToShipmentResponseType {
        
        private bool successField;
        
        private string errorStatusField;
        
        private string orderNoField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorStatus {
            get {
                return this.errorStatusField;
            }
            set {
                this.errorStatusField = value;
            }
        }
        
        /// <remarks/>
        public string OrderNo {
            get {
                return this.orderNoField;
            }
            set {
                this.orderNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateDCargoNotesCompletedEventHandler(object sender, UpdateDCargoNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDCargoNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDCargoNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateDCargoCompletedEventHandler(object sender, UpdateDCargoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDCargoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDCargoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AttachFileToShipmentCompletedEventHandler(object sender, AttachFileToShipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttachFileToShipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AttachFileToShipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AttachFileToShipmentResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttachFileToShipmentResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ChangeShipmentCompletedEventHandler(object sender, ChangeShipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeShipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeShipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SendProgressCompletedEventHandler(object sender, SendProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReadSendProgressCompletedEventHandler(object sender, ReadSendProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadSendProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadSendProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadDetailsCompletedEventHandler(object sender, LoadDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UploadimgsCompletedEventHandler(object sender, UploadimgsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadimgsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadimgsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ShipmentActionUpdateCompletedEventHandler(object sender, ShipmentActionUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipmentActionUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipmentActionUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void PostSignatureCompletedEventHandler(object sender, PostSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SBoardDataDetailsCompletedEventHandler(object sender, SBoardDataDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SBoardDataDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SBoardDataDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void MBoardDataCompletedEventHandler(object sender, MBoardDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MBoardDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MBoardDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void MBoardDataDetailsCompletedEventHandler(object sender, MBoardDataDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MBoardDataDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MBoardDataDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591